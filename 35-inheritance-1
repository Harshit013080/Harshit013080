class base{                               //here in base class there are properties related to base
    public int x;                         //rule of thumb -- whenever u use public access modifier that thing can be accessed anywhere
    
    public int getX(){
        return x;
    }
    
    public void setX(int x){
        System.out.println("I am in base and setting x now");
        this.x = x;
    }
    
    public void printMe(){
        System.out.println("I am a constructor");
    }
}
   
   // If we want to use the properties of base class in other class we will not do copy paste...
   //we will use the concept of inheritance here
   
class derived extends base{                //extends is the keyword for inheritance
                                           //to access it there is some other stuff required[access modifiers]
 
    int y;                                 //you can also add something if u want
    public int getY(){
        return y;                          //all things of base is been copied but how much
    }                                      //derived class can access depends upon the access modifiers used
    
    public void setY(int y){
        this.y = y;
    }
    
}

public class Main
{
	public static void main(String[] args) {
		
		//creating object of base class
		base b = new base();                   //you can also use derived at the place of base(already displayed)
		b.setX(4);                             //the output would be the same
		System.out.println(b.getX());          // you cant access y from base class but derived class can access x from base
	    
	    
	    //creating object of derived class	
		derived d = new derived();                   
		d.setX(7);                                   
		System.out.println(d.getX());
	}
}
